name: 'Terraform'

on:
  push:
    branches:
      - main
    paths:
      - "terraform/infra/**"

  workflow_dispatch: # Manually trigger workflow
    inputs:
      environment:
        description: "Environment to apply Terraform changes"
        required: true
        default: "dev"

permissions:
  id-token: write
  contents: read
  issues: write
  checks: write
  pull-requests: write     

defaults:
  run:
    working-directory: "terraform/infra/"

env:
  TF_VERSION: "1.9.8"
  AWS_REGION: "us-east-1"
  WORKING_DIR: "terraform/infra/"
  ENVIRONMENT: "dev"

jobs:
  terraform-plan:
    name: 'Terraform-plan'
    runs-on: ubuntu-latest
    environment : ${{ github.event.inputs.environment || 'dev' }}


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform workspace
        id: workspace-select
        run: terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}


      - name: Terraform Plan
        id: terraform-plan
        run: terraform plan -var-file="terraform.tfvars"

    
      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve
